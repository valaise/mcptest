# Default values for todo-app
# This is a YAML-formatted file.

replicaCount: 1

backend:
  image:
    repository: todo-backend
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 8080

frontend:
  image:
    repository: todo-frontend
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    type: ClusterIP
    port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: todo-app.local
      paths:
        - path: /
          pathType: Prefix
          service: frontend
          port: 80
        - path: /api
          pathType: Prefix
          service: backend
          port: 8080

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    username: postgres
    password: postgres
    database: tododb
  primary:
    persistence:
      enabled: true
      size: 1Gi

# Prometheus configuration
prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 8Gi

# Grafana configuration
grafana:
  enabled: true
  persistence:
    enabled: true
    size: 1Gi
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://{{ .Release.Name }}-prometheus-server
          access: proxy
          isDefault: true
        - name: Jaeger
          type: jaeger
          url: http://{{ .Release.Name }}-jaeger-query:16686
          access: proxy

# Jaeger configuration
jaeger:
  enabled: true
  provisionDataStore:
    cassandra: false
  allInOne:
    enabled: true
  storage:
    type: memory

# OpenTelemetry Collector configuration
opentelemetry-collector:
  enabled: true
  mode: deployment
  config:
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        namespace: "todo"
        const_labels:
          app: "todo-app"
      otlp:
        endpoint: "{{ .Release.Name }}-jaeger-collector:4317"
        tls:
          insecure: true
      logging:
        loglevel: debug
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp, logging]
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus, logging] 